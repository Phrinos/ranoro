
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- USERS Collection ---
    // User profiles, containing their role and tenantId.
    match /users/{userId} {
      // Any authenticated user can read their OWN profile to get their tenantId.
      // An authenticated user can create their OWN profile if it doesn't exist yet.
      allow read, create: if isAuthenticated() && isOwner(userId);
      // An admin of the same tenant can update user profiles (e.g., change roles).
      allow update: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tenantId == resource.data.tenantId;
    }

    // --- TENANTS Collection ---
    // This collection holds all the operational data for each workshop (tenant).
    match /tenants/{tenantId} {
        // Allow read/write access if the requesting user's tenantId (from their profile)
        // matches the tenantId of the document they are trying to access.
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tenantId == tenantId;
    }

    // --- PUBLIC Collections ---
    // Read-only access for public-facing documents.
    match /publicServices/{publicId} {
      allow get;
      // Allow an unauthenticated (or any) user to update only the signature fields.
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['customerSignatureReception', 'customerSignatureDelivery']);
    }
    
    match /publicQuotes/{publicId} {
        allow get;
    }
    
    match /publicOwnerReports/{publicId} {
        allow get;
    }
  }
}
