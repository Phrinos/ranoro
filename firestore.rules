
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all access to prevent unintentional open collections
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to manage their own user profile document.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to read and write to the main workshop data document.
    // The security is implicit: if a user can authenticate, they are part of the workshop.
    match /database/main {
      allow read, write: if request.auth != null;
    }

    // publicQuotes are world-readable for sharing, but only auth users can write.
    match /publicQuotes/{quoteId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null; 
    }
    
    // publicOwnerReports are world-readable for sharing, but only auth users can write.
    match /publicOwnerReports/{reportId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    // publicServices are world-readable for sharing.
    match /publicServices/{serviceId} {
      allow read: if true;
      
      // Allow authenticated users to perform any update.
      // Allow unauthenticated customers to update ONLY signature fields.
      allow update: if request.auth != null || 
                      (request.resource.data.diff(resource.data).affectedKeys()
                      .hasOnly(['customerSignatureReception', 'customerSignatureDelivery', 'receptionSignatureViewed', 'deliverySignatureViewed']));
                      
      // Allow create/delete only for authenticated users.
      allow create, delete: if request.auth != null;
    }
  }
}
