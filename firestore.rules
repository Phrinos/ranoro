rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // User data is private to the user themselves.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // App-specific collections are accessible to any authenticated user.
    // You might want to refine these rules further based on roles.
    match /vehicles/{vehicleId} {
      allow read, write: if request.auth != null;
    }
    
    match /vehiclePriceLists/{priceListId} {
      allow read, write: if request.auth != null;
    }

    match /serviceRecords/{serviceId} {
      allow read, write: if request.auth != null;
    }

    // publicQuotes are world-readable for sharing.
    match /publicQuotes/{quoteId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null; 
    }
    
    // publicOwnerReports are world-readable for sharing.
    match /publicOwnerReports/{reportId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    // publicServices are world-readable.
    match /publicServices/{serviceId} {
      allow read: if true;
      allow update: if request.auth != null || 
                      (request.resource.data.diff(resource.data).affectedKeys()
                      .hasOnly(['customerSignatureReception', 'customerSignatureDelivery', 'receptionSignatureViewed', 'deliverySignatureViewed']));
      allow create, delete: if request.auth != null;
    }
    
    // Rule for the new public_documents collection
    match /public_documents/{documentId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Fallback rule: Deny access to any other path.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
